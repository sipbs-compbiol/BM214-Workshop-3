[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "BM214 Workshop 3: Enumeration of Bacteria and Bacteriophage",
    "section": "",
    "text": "Preface to 2023-24 BM214 Workshop 3: Enumeration of Bacteria and Bacteriophage\nWelcome to the BM214 (Being a Biomolecular Scientist 2) workshop on enumeration of bacteria and bacteriophage, for 2023-24.\nThis year is the first presentation of the workshop material in this format, and we would be very grateful to hear feedback by email or through the GitHub repository Issues page.",
    "crumbs": [
      "Preface to {{< var ay >}} BM214 Workshop 3: Enumeration of Bacteria and Bacteriophage"
    ]
  },
  {
    "objectID": "index.html#overview",
    "href": "index.html#overview",
    "title": "BM214 Workshop 3: Enumeration of Bacteria and Bacteriophage",
    "section": "Overview",
    "text": "Overview\n[FILL TEXT HERE]\n\n\n\n\n\n\nImportant Note\n\n\n\nThere is new material in this workshop that is not covered in lectures, and this material is examinable. Please take care to reach the text in the expandable callout boxes, as well as that for the workshop activities, to be sure you have understood the topic and obtain full value from the exercises.",
    "crumbs": [
      "Preface to {{< var ay >}} BM214 Workshop 3: Enumeration of Bacteria and Bacteriophage"
    ]
  },
  {
    "objectID": "index.html#learning-objectives",
    "href": "index.html#learning-objectives",
    "title": "BM214 Workshop 3: Enumeration of Bacteria and Bacteriophage",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nBy the end of this workshop, students will be able to:\n\nexplain that 16S sequences are commonly used for bacterial identification and taxonomic assignment\ndescribe and use two online tools for 16S sequence analysis: BLAST and silva\ninterpret the output of BLAST and silva and positively identify an organism, or rule out an identification\nplot data from a microbial growth curve using R and ggplot2\nfit a curve to microbial growth data using R and ggplot2\nplot data from a reporter assay using R and ggplot2\nadjust and customise a figure using R and ggplot2",
    "crumbs": [
      "Preface to {{< var ay >}} BM214 Workshop 3: Enumeration of Bacteria and Bacteriophage"
    ]
  },
  {
    "objectID": "index.html#assessment",
    "href": "index.html#assessment",
    "title": "BM214 Workshop 3: Enumeration of Bacteria and Bacteriophage",
    "section": "Assessment",
    "text": "Assessment\nThe workshop is not formally assessed although, as noted, all the material contained in the workshop is examinable. [FILL TEXT HERE]",
    "crumbs": [
      "Preface to {{< var ay >}} BM214 Workshop 3: Enumeration of Bacteria and Bacteriophage"
    ]
  },
  {
    "objectID": "part-01_16s.html",
    "href": "part-01_16s.html",
    "title": "16S Sequence Identification",
    "section": "",
    "text": "As part of BM214 Laboratories 1 and 2 (Figure 1), you:\n\nisolated your unknown bacterium in axenic culture\nmade decimal serial dilutions and plated these on selective and differential media\nstreaked a single colony from the selective plate onto nutrient agar\n\n\n\n\n\n\n\nFigure 1: Overview of BM214 Laboratory 3, experiment 2.\n\n\n\nIn Laboratory 3, you set up a PCR reaction with primers that annealed specifically to the 16S rRNA gene (Figure 2), so that you could specifically amplify and sequence that gene in order to identify your unknown organism.\n\n\n\n\n\n\nFigure 2: Schematic of 16S PCR amplification\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nIn this workshop you will use online bioinformatics tools to find a match to the 16S sequence of the bacterium you isolated, and in doing so identify your unknown organism.\n\n\n\n\n\n\n\n\nUse what you know from BM214 Workshop 2\n\n\n\n\n\nIn Workshop 2 you used NCBI’s BLAST service to identify an unknown isolate from a contaminated industrial site, using its 16S sequence. You can use what you have already learned from that exercise to help you. here.",
    "crumbs": [
      "16S Sequence Identification"
    ]
  },
  {
    "objectID": "exercise-01_16s.html",
    "href": "exercise-01_16s.html",
    "title": "1  16S Sequence Taxonomic Identification",
    "section": "",
    "text": "1.1 Introduction\nIn this exercise you will use the 16S sequence that you amplified from your unknown bacterium in order to make a taxonomic identification.\nTo do this, you will use two online bioinformatics services:",
    "crumbs": [
      "16S Sequence Identification",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>16S Sequence Taxonomic Identification</span>"
    ]
  },
  {
    "objectID": "exercise-01_16s.html#introduction",
    "href": "exercise-01_16s.html#introduction",
    "title": "1  16S Sequence Taxonomic Identification",
    "section": "",
    "text": "NCBI’s BLAST tool (you have already met this in Workshop 2)\nsilva, a quality-checked and curated 16S sequence database service\n\n\n\n\n\n\n\nFigure 1.1: Bioinformatics confuses kittens.\n\n\n\n\n\n\n\n\n\nWhy are we using two different services?\n\n\n\n\n\nIt might tempting to take computational results at face value, and to believe that the “computer can’t be wrong.” But, in bioinformatics as elsewhere in life, computers and databases can sometimes be in error or give imprecise answers. In general the results of a sequence database search, like querying a 16S sequence against a public database, depend on a number of factors, including:\n\nthe query sequence (obviously)\nthe contents of the database\nthe search tool used to query the database\nthe parameter settings for the search tool\n\nand even if the query sequence is the same, using a different service will often change at least one of the other three factors - and maybe other thigs besides.\nThis exercise will give you experience in using alternative bioinformatics tools for the same task.",
    "crumbs": [
      "16S Sequence Identification",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>16S Sequence Taxonomic Identification</span>"
    ]
  },
  {
    "objectID": "exercise-01_16s.html#your-data",
    "href": "exercise-01_16s.html#your-data",
    "title": "1  16S Sequence Taxonomic Identification",
    "section": "1.2 Your data",
    "text": "1.2 Your data\n\n\n\n\n\n\nImportant\n\n\n\nYou should download the 16S sequence file you obtained from your experiment in Laboratory 3.\nThis will be a plain-text file in FASTA format.",
    "crumbs": [
      "16S Sequence Identification",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>16S Sequence Taxonomic Identification</span>"
    ]
  },
  {
    "objectID": "exercise-01_16s.html#analysis-1-ncbi-blast",
    "href": "exercise-01_16s.html#analysis-1-ncbi-blast",
    "title": "1  16S Sequence Taxonomic Identification",
    "section": "1.3 Analysis 1: NCBI BLAST",
    "text": "1.3 Analysis 1: NCBI BLAST\nFollow the steps below to carry out a blastn search using your 16S sequence data.\n\n1.3.1 Navigate to the NCBI BLAST webservice\n\nNCBI BLAST homepage\n\n\n\n1.3.2 Select the BLAST Tool\n\n\n\n\n\n\nHint: Which BLAST tool should I use?\n\n\n\n\n\nYour query sequence is a nucleotide sequence, and the 16S sequences of other organisms are also nucleotide sequences, so this is a nucleotide vs nucleotide search.\nFor a reminder, see Workshop 2.\n\n\n\n\n\n\n\n\n\nAnswer: The BLAST tool to use\n\n\n\n\n\nThis is a nucleotide vs nucleotide search, so use the Nucleotide BLAST tool.\n\n\n\n\n\n\nFigure 1.2: Nucleotide BLAST image\n\n\n\n\n\n\n\n\n1.3.3 Enter the query sequence\n\n\n\n\n\n\nAnswer: Entering the query sequence\n\n\n\n\n\nYou can enter the query sequence in either of two ways.\n\nOpen your 16S sequence file in a text editor, copy the data, and paste the data into the Enter Query Sequence field.\n\n\n\n\n\n\n\nFigure 1.3: Query sequence pasted into the query field\n\n\n\n\nClick on the Browse… button to open a file selection dialogue box, then select your 16S sequence file. The uploaded file’s name will then be visible next to the Browse… button.\n\n\n\n\n\n\n\nFigure 1.4: Query sequence uploaded as a file. Note the filename next to the Browse… button\n\n\n\n\n\n\n\n\n1.3.4 Set appropriate parameter choices\n\n\n\n\n\n\nHint: Which database should I use?\n\n\n\n\n\nThe NCBI BLAST webservice provides specialised databases for common, well-defined search tasks.\nYou have a well-defined set of target sequences that you want to compare your query with: they are all 16S sequences. Can you see a database on the search page that might be suitable?\n\n\n\n\n\n\n\n\n\nAnswer: Which database to use\n\n\n\n\n\nThe NCBI BLAST webservice provides specialised databases for common, well-defined search tasks, including searching for 16S or ITS (Internally-Transcribed Spacer) sequences when identifying unknown microorganisms.\nSelect the rRNA/ITS databases radio button, and ensure that the “Bacteria and Archaea” database is selected.\n\n\n\n\n\n\nFigure 1.5: NCBI BLAST 16S database choice\n\n\n\n\n\n\n\n\n1.3.5 Run the BLAST search\n\n\n\n\n\n\nAnswer: Running the BLAST search\n\n\n\n\n\nClick on the BLAST button.\n\n\n\n\n\n\nFigure 1.6: NCBI BLAST button\n\n\n\n\n\n\n\n\n1.3.6 Interpret the BLAST report (MyPlace Questions)\nIt is common for 16S rDNA sequences to match many other bacterial sequences in the database. However, by identifying those most closely-related to the query sequence, you should be able to establish a likely identity for this organism.\n\n\n\n\n\n\nImportant\n\n\n\nPlease answer the questions below in the formative quiz on MyPlace\n\nMyPlace formative quiz\n\nClicking on the green box should give you a hint to the answer, or where to find it.\n\n\n\n\n\n\n\n\nWhat is the accession number of the best match to your query?\n\n\n\n\n\nCheck the Accession column under “Sequences producing significant alignments” in the report’s Descriptions tab.\n\n\n\n\n\n\n\n\n\nWhat organism is the best match to your query?\n\n\n\n\n\nCheck the Description column under “Sequences producing significant alignments” in the report’s Descriptions tab.\n\n\n\n\n\n\n\n\n\nWhat is the total score for the best matching alignment?\n\n\n\n\n\nCheck the Total Score column under “Sequences producing significant alignments” in the report’s Descriptions tab.\n\n\n\n\n\n\n\n\n\nWhat is the query coverage against the best matching alignment?\n\n\n\n\n\nCheck the Query Cover column under “Sequences producing significant alignments” in the report’s Descriptions tab.\n\n\n\n\n\n\n\n\n\nWhat is the alignment percentage identity for the best matching alignment?\n\n\n\n\n\nCheck the Per. Ident column under “Sequences producing significant alignments” in the report’s Descriptions tab.",
    "crumbs": [
      "16S Sequence Identification",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>16S Sequence Taxonomic Identification</span>"
    ]
  },
  {
    "objectID": "exercise-01_16s.html#analysis-2-silva",
    "href": "exercise-01_16s.html#analysis-2-silva",
    "title": "1  16S Sequence Taxonomic Identification",
    "section": "1.4 Analysis 2: silva",
    "text": "1.4 Analysis 2: silva\nsilva is a curated, quality-checked database of rRNA sequence data that has been run by the Liebniz Institute DSMZ German Collection of Microorganisms and Cell Cultures for about two decades. The silva site provides a number of online tools and services, including the ACT service that enables users to search the database with their own rRNA sequences to find the best matches and identify their organism.\n\nsilva rRNA database project\nsilva Alignment, Classification, and Tree (ACT) webservice\nACT online tutorial\n\n\n1.4.1 Navigate to the silva webservice\n\nsilva ACT (Alignment, Classification, and Tree) service\n\n\n\n\n\n\n\nFigure 1.7: The silva ACT landing page\n\n\n\n\n\n1.4.2 Enter the query sequence\n\n\n\n\n\n\nAnswer: Entering the query sequence\n\n\n\n\n\nYou can enter the query sequence in either of two ways.\n\nOpen your 16S sequence file in a text editor, copy the data, and paste the data into the Input data field (where it says “Paste your FASTA sequence here”).\n\n\n\n\n\n\n\nFigure 1.8: silva landing page with sequence pasted into the Input data field\n\n\n\n\nClick on the Select file button to open a file selection dialogue box, then select your 16S sequence file. The uploaded file’s name will then be visible in the field next to the Select file button.\n\n\n\n\n\n\n\nFigure 1.9: silva landing page with sequence uploaded as a file\n\n\n\n\n\n\n\n\n1.4.3 Set appropriate parameter choices\n\n\n\n\n\n\nHint: What parameters are important?\n\n\n\n\n\nsilva is designed specifically to assign taxonomy from 16S sequence data, so you shouldn’t usually need to modify any parameters. However, you do need to tell silva what actions you want it to take.\nYou want to search with your sequence and classify it.\n\n\n\n\n\n\n\n\n\nAnswer: What parameters to set\n\n\n\n\n\nYou need to tell silva that you want to search with your sequence and classify it. So check the box marked Search and classify.\nThe default settings (95% minimum sequence identity, reporting ten neighbours) are a good starting point.\nOnce you select Search and classify, a new set of options will appear in the window (Figure 1.10) and these can also be left as they are.\n\n\n\n\n\n\nFigure 1.10: silva’s default Search and classify options.\n\n\n\n\n\n\n\n\n1.4.4 Run the silva search\n\n\n\n\n\n\nAnswer: Running the silva search\n\n\n\n\n\nClick on the Run Tool button (lower right of Figure 1.10).\n\n\n\n\n\n\n\n\n\nCaution\n\n\n\nsilva does not provide results as quickly as NCBI’s BLAST server. Keep your eye on the Aligner Taskmanager section of the page, to monitor progress.\nsilva’s progress will run through several stages, from initialising to finished.\n\n\n\n\n\n\nFigure 1.11: silva’s Aligner Taskmanager table\n\n\n\n\n\n\n\n1.4.5 Interpret the silva report (MyPlace Questions)\nUnlike BLAST, silva provides the identity of the last common ancestor (LCA), rather than reporting a sequence search match. It displays results in the Alignment Result Table (Figure 1.12). This table displays scores but, by clicking on the Display Classification button, you can see the taxonomic identification silva has made for your sequence (Figure 1.13).\n\n\n\n\n\n\nFigure 1.12: silva’s Alignment Result Table\n\n\n\n\n\n\n\n\n\nFigure 1.13: silva’s Alignment Result Table, showing classification information\n\n\n\n\n\n\n\n\n\nHelp! I can’t see the full classification!\n\n\n\n\n\nUse the “handles” to drag the size of the column headers to the left or right, until you can see the classification, as in Figure 1.14.\n\n\n\n\n\n\nFigure 1.14: silva’s Alignment Result Table, showing classification information with wider columns\n\n\n\nAlternatively, use the Export to CSV option to download a plain-text .csv file containing silva’s results for your sequence. You can open this in a text editor, or in Excel.\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nPlease answer the questions below in the formative quiz on MyPlace\n\nMyPlace formative quiz\n\nClicking on the green box should give you a hint to the answer, or where to find it.\n\n\n\n\n\n\n\n\nWhat is the the taxonomic identity of the last common ancestor (LCA) silva assigns to your organism?\n\n\n\n\n\nYou can find this in the LCA tax. SILVA column of the Alignment Result Table, or in the lca_tax_slv column of the downloaded .csv file.\n\n\n\n\n\n\n\n\n\nWhat sequence identity does your isolate’s sequence share with the sequence of the reported last common ancestor?\n\n\n\n\n\nYou can find this in the Identity column of the Alignment Result Table, or in the identity column of the downloaded .csv file.\n\n\n\n\n\n\n\n\n\nDo the BLAST and silva searches give the same taxonomic identity for your 16S sequence?\n\n\n\n\n\nInspect the outputs of both methods, and compare the taxonomic assignments.\n\n\n\n\n\n\n\n\n\nWhat is your current opinion about the identity of your isolate? How confident are you in the identification made by each tool?\n\n\n\n\n\nAmong other things, you may want to consider:\n\ndid both tools give the same identification?\nhow much sequence identity was shared between your query sequence and the matches each tool found?\nis your organism common enough that there are many examples of its 16S sequence known?",
    "crumbs": [
      "16S Sequence Identification",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>16S Sequence Taxonomic Identification</span>"
    ]
  },
  {
    "objectID": "part-02_yeast.html",
    "href": "part-02_yeast.html",
    "title": "Yeast Growth Experiment",
    "section": "",
    "text": "As part of BM214 laboratories 2 and 3 (Figure 1) you investigated strains of Saccharomyces cerevisiae that had been generated by random mutagenesis. In laboratory 2, you were provided with streak plates containing S. cerevisiae strains, and set up cultures in liquid media:\n\ncontrol\nsupplememnted with glucose\nsupplemented with lactose\n\nThese cultures were incubated for you, and in Laboratory 3 you measured their growth using a spectrophotometer.\n\n\n\n\n\n\nFigure 1: Overview of BM214 Experiment 3.\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nIn this part of the workshop, you will use R to plot growth curves for your strains interactively, in the browser.\n\n\n\n\n\n\n\n\nUse what you know from BM110 and BM211\n\n\n\n\n\nYou have met R before in the statistics component of BM110, and in an intereactive exercise as part of a BM211 workshop.\nR can be used in several different ways - as a standalone program, within the RStudio environment or - as here - in a web browser. Full instructions for how to generate your figures are provided as part of the workshop.",
    "crumbs": [
      "Yeast Growth Experiment"
    ]
  },
  {
    "objectID": "exercise-02_yeast.html",
    "href": "exercise-02_yeast.html",
    "title": "2  Yeast Growth Experiment",
    "section": "",
    "text": "2.1 Introduction\nIn this exercise you will use the absorbance data obtained from your yeast growth experiment in Laboratory 3 to draw growth curves for your three Saccharomyces cerevisiae strains, using the R language.\nIn your experiment you saw that as the yeast grew in your liquid culture, the cuvette became turbid (Figure 2.1), proportionally to the density of cells in the culture. The turbidities of your samples were measured over a 24 hour period using a spectrophotometer, as optical density (OD600).",
    "crumbs": [
      "Yeast Growth Experiment",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Yeast Growth Experiment</span>"
    ]
  },
  {
    "objectID": "exercise-02_yeast.html#introduction",
    "href": "exercise-02_yeast.html#introduction",
    "title": "2  Yeast Growth Experiment",
    "section": "",
    "text": "Why use R?\n\n\n\n\n\nThere are many great tools capable of plotting your data (Numbers, Excel, Prism, GNUplot, Minitab, SPSS, MatLab, Python, JavaScript, etc.) and the choice of tool should in general reflect your data presentation needs, and your level of comfort with the tool.\nHere, we use R because it is a very powerful means of carrying out many computational aspects of biology, including data visualisation, quickly and easily. Many of the topics you may meet later in your degree - phylogenetic, pharmacokinetics, microbial genomics, and so on - are supported by packages in R designed specifically for those subjects, and can make your work much easier. Also, skills in R are highly sought-after by industrial and other employers. Having some experience of R is an advantage.\nR may be unfamiliar to you just now, but we provide step-by-step instructions for completing the exercise and, by the end of it, we hope you feel a bit more confident in how to use it.\n\n\n\n\n\n\n\n\n\n\nFigure 2.1: Yeast cell growth causes turbidity in liquid medium, proportional to cell density.\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nIn this part of the workshop, you will plot the absorbance of your control (no carbon), lactose, and glucose medium samples over time, using R.",
    "crumbs": [
      "Yeast Growth Experiment",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Yeast Growth Experiment</span>"
    ]
  },
  {
    "objectID": "exercise-02_yeast.html#load-and-inspect-your-data",
    "href": "exercise-02_yeast.html#load-and-inspect-your-data",
    "title": "2  Yeast Growth Experiment",
    "section": "2.2 Load and inspect your data",
    "text": "2.2 Load and inspect your data\nYou will have been assigned a filename that corresponds to the absorbance data obtained from your yeast cultures. This will be in the form &lt;session&gt;_Bay_&lt;bay_number&gt;_&lt;strain_number&gt;.csv, such as\n\nAM_Bay_24_03.csv or\nPM_Bay_02_01.csv\n\nTo load your data into the WebR instance below, you would issue the command:\n\n# Of course, you would substitute the name of your own file\ndata &lt;- read.csv(\"AM_Bay_24_03.csv\")\n\nand, to get information about the contents of the dataset, you could use the glimpse() function:\n\nglimpse(data)\n\nor the head() function to view the first few lines of the dataset:\n\n# The n=10 argument tells head() to show the first 10 lines.\n# Try varying this to see more or fewer lines of your dataset\nhead(data, n=10)\n\n\n\n\n\n\n\nImportant\n\n\n\nUse the WebR cell below to load your dataset and inspect its contents.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n[COLLAPSIBLE TEXT HERE ABOUT LONG FORM DATA]",
    "crumbs": [
      "Yeast Growth Experiment",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Yeast Growth Experiment</span>"
    ]
  },
  {
    "objectID": "exercise-02_yeast.html#plot-your-growth-curves",
    "href": "exercise-02_yeast.html#plot-your-growth-curves",
    "title": "2  Yeast Growth Experiment",
    "section": "2.3 Plot your growth curves",
    "text": "2.3 Plot your growth curves\n\n\n\n\n\n\nWarning\n\n\n\nYou will be using the ggplot2 R package to plot your data in this workshop. Normally, you would need to import this package by using the command:\n\nlibrary(ggplot2)\n\nbut it has been pre-imported for you, for this workshop.\n\n\n\n2.3.1 Basic ggplot2 growth curve\nggplot2 plots are composed of a sequence of layers. The base layer is a declaration of the dataset, and which variables in the dataset will be used to draw the figure.\nWhen you inspected your dataset in the WebR cell above, you will have seen that there are three variables in the dataset:\n\ntime (the time in hours after the experiment started at which the measurement was taken)\nOD600 (the absorbance measurement)\nmedium (the liquid medium in which the yeast were grown)\n\nWe want to plot this data in the following way:\n\ntime should extend along the \\(x\\)-axis from left to right to indicate the progression of the experiment\nOD600 should extend up the \\(y\\)-axis to indicate how much light was absorbed by the yeast at each timepoint\nmedium will be used to separate datapoints into distinct curves in the graph\n\nTo declare the base dataset, we can create a ggplot() object, specifying the dataset we will be using (the data argument), and the variables to be used along the x and y axes in the aesthetics aes() argument:\n\nfig &lt;- ggplot(data, aes(x=time, y=OD600))  # Declare the dataset/base layer\n\nThe fig variable we create this way has a single layer, this data declaration. It does not yet have any visualisation or graphics. To generate a plot, we must add a new layer - a geometry layer, such as geom_point():\n\nfig &lt;- ggplot(data, aes(x=time, y=OD600)) +  # Declare the dataset/base layer\n         geom_point()  # Add a marker for each datapoint\n\ngeom_point() will add a visualisation layer to the plot, but we won’t be able to see it until we tell R to show us the figure. We can do this in a number of ways, such as with a print() statement:\n\nfig &lt;- ggplot(data, aes(x=time, y=OD600)) +  # Declare the dataset/base layer\n         geom_point()  # Add a marker for each datapoint\n\n# Show the figure\nprint(fig)\n\nor just using the variable name\n\nfig &lt;- ggplot(data, aes(x=time, y=OD600)) +  # Declare the dataset/base layer\n         geom_point()  # Add a marker for each datapoint\n\n# Show the figure\nfig\n\n\n\n\n\n\n\nImportant\n\n\n\nUse the WebR cell below to visualise your data with a basic plot.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nResult\n\n\n\n\n\nThe figure you generate probably won’t look very impressive (Figure 2.2). The datapoints are all there and, because we know that there are three growth curves we can - as humans - interpret the data accordingly.\n\n\n\n\n\n\nFigure 2.2: A basic ggplot() graph of three growth curves. There is much room for improvement.\n\n\n\nThere are nice things about this figure. The axis labels have already been added, and the gridlines help orient the viewer to the actual data values. But we can’t really see which datapoints belong to which media, or to which curves. We might want to improve this in a few ways:\n\ncolour the datapoints by medium\nfit a line through the datapoints so we can see the growth curve trends\nuse a semilog (logarithmic \\(y\\)-axis) plot\n\nWe will go through all these improvements, below.\n\n\n\n\n\n2.3.2 Colouring datapoints by medium\nTo colour our data representation by a variable, we assign that variable to the color argument when setting up the plot aesthetics:\n\nfig &lt;- ggplot(data, aes(x=time, y=OD600, color=medium))  # Colour data by the medium\n\nDoing this with our plot code above:\n\nfig &lt;- ggplot(data, aes(x=time, y=OD600, color=medium)) +  # Declare the dataset/base layer\n         geom_point()  # Add a marker for each datapoint\n\n# Show the figure\nfig\n\n\n\n\n\n\n\nImportant\n\n\n\nUse the WebR cell below to visualise your data using colour to separate data points by growth medium.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nResult\n\n\n\n\n\nThe figure you generated now clearly shows which datapoint belongs to which growth curve (Figure 2.3). ggplot2 has automatically added a legend to the plot, and the data is much more interpretable.\n\n\n\n\n\n\nFigure 2.3: A ggplot() graph of three growth curves, with growth medium indicated by colour.\n\n\n\nThis is obviously an improvement, but we still have things that we want to do to make the plot better:\n\nfit a line through the datapoints so we can see the growth curve trends\nuse a semilog (logarithmic \\(y\\)-axis) plot\n\n\n\n\n\n\n2.3.3 Fit a model to the data\nOne of the things that makes R so powerful is the ready availability of many statistical tools, including the ability to fit statistical models to datasets.\nThe ggplot2 package provides a layer called geom_smooth() which allows us to fit a model to each curve in our dataset. By default geom_smooth() uses a method called loess to estimate a best fit to the data. You can add this layer using the code below:\n\nfig &lt;- ggplot(data, aes(x=time, y=OD600, color=medium)) +  # Declare the dataset/base layer\n         geom_point() + # Add a marker for each datapoint\n         geom_smooth()  # Fit a default curve to the data\n\n# Show the figure\nfig\n\n\n\n\n\n\n\nImportant\n\n\n\nUse the WebR cell below to fit a curve to your data, using geom_smooth().\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nResult\n\n\n\n\n\nThe resulting figure has added a model curve, estimated using loess to the dataset for each medium (Figure 2.4). The coloured line shows the model fit, and the semitransparent ribbon shows the standard error (se) of the fit - an estimate of fit accuracy.\n\n\n\n\n\n\nFigure 2.4: A ggplot() graph of three growth curves, with growth medium indicated by colour and a best-fit loess curve.\n\n\n\nThis kind of curve tends to overfit the dataset, as might be seen by the tendency of the curve to “kick” up or down at the end of the graph. Generally-speaking, we should always try to fit a suitable model to our data, and loess is not necessarily the most suitable model.\n\n\n\n\n\n2.3.4 Use a logarithmic \\(y\\)-axis\nIt is usual to draw growth curves using a logarithmic \\(y\\)-axis. There are a number of reasons for doing this, but the main one is that plotting OD on a linear \\(y\\)-axis is misleading about the start of the logarithmic phase of growth.\nThe beginning of logarithmic growth - though logarithmic - involves small changes in absolute OD that are not easy to distinguish on a linear scale. Plotting OD on a logarithmic scale makes it easier to identify the start of the log phase.\nTo set a logarithmic \\(y\\)-axis, we add a style layer: scale_y_log10()\n\nfig &lt;- ggplot(data, aes(x=time, y=OD600, color=medium)) +  # Declare the dataset/base layer\n         geom_point() + # Add a marker for each datapoint\n         geom_smooth() +  # Fit a default curve to the data\n         scale_y_log10()  # Make the y-axis logarithmic\n\nand, to make the graph easier to interpret we can add logarithmic \\(y\\)-axis ticks with the annotation_logticks() style layer:\n\nfig &lt;- ggplot(data, aes(x=time, y=OD600, color=medium)) +  # Declare the dataset/base layer\n         geom_point() + # Add a marker for each datapoint\n         geom_smooth() +  # Fit a default curve to the data\n         scale_y_log10() +  # Make the y-axis logarithmic\n         annotation_logticks(sides=\"l\")  # Add logarithmic y-axis ticks\n\n\n\n\n\n\n\nImportant\n\n\n\nUse the WebR cell below to make the y-axis logarithmic and add logarithmic axis ticks.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nResult\n\n\n\n\n\nThe figure (Figure 2.5) now has a logarithmic \\(y\\)-axis (and a linear \\(x\\)-axis, hence “semilog plot”), and it is clear that, compared to Figure 2.5, the logarithmic growth visibly starts earlier.\n\n\n\n\n\n\nFigure 2.5: A ggplot() graph of three growth curves, with growth medium indicated by colour and a best-fit loess curve, using a logarithmic \\(y\\)-axis.\n\n\n\n\n\n\n\n\n2.3.5 Making a monochrome plot\nThe plot looks pretty good just now but, for publication, we might want to make the plot black and white, or greyscale to suit a publisher’s requirements. There are three things we can do to make our plot publication-ready in this way.\nFirst, we need to set the colour scheme to greyscale. We can do this by adding the scale_colour_grey() style layer. Next, we change the overall ggplot2 theme to be black-and-white, with the theme_bw() style layer. Finally, we turn off the grid markings, with specific theme() style layer instructions. Putting these together, we get:\n\nfig &lt;- ggplot(data, aes(x=time, y=OD600, color=medium)) +  # Declare the dataset/base layer\n         geom_point() + # Add a marker for each datapoint\n         geom_smooth() +  # Fit a default curve to the data\n         scale_y_log10() +  # Make the y-axis logarithmic\n         annotation_logticks(sides=\"l\") + # Add logarithmic y-axis ticks\n         scale_colour_grey() +  # Convert colours to greyscale\n         theme_bw() +  # Make the theme black and white\n         theme(panel.grid.major = element_blank(),\n               panel.grid.minor = element_blank())  # Remove grid lines\n\n\n\n\n\n\n\nImportant\n\n\n\nUse the WebR cell below to generate a black and white publication-ready plot.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nResult\n\n\n\n\n\nThe resulting figure (Figure 2.6) has replaced the colour scheme with greyscale, removed the gridlines, and changed the overall theme to black-and-white.\n\n\n\n\n\n\nFigure 2.6: A ggplot() graph of three growth curves, with growth medium indicated by grey level and a best-fit loess curve, plotted with a logarithmic \\(y\\)-axis.",
    "crumbs": [
      "Yeast Growth Experiment",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Yeast Growth Experiment</span>"
    ]
  },
  {
    "objectID": "exercise-03_reporter.html",
    "href": "exercise-03_reporter.html",
    "title": "3  Reporter Gene Expression",
    "section": "",
    "text": "3.1 Introduction\n[NEEDS TEXT HERE]",
    "crumbs": [
      "Reporter Gene Expression",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Reporter Gene Expression</span>"
    ]
  },
  {
    "objectID": "exercise-03_reporter.html#introduction",
    "href": "exercise-03_reporter.html#introduction",
    "title": "3  Reporter Gene Expression",
    "section": "",
    "text": "Important\n\n\n\nIn this part of the workshop, you will plot the ratio of your reporter absorbance (OD700) to your organism growth (OD600) against the concentration of antibiotic applied, using R, in order to identify good candidate reporters.",
    "crumbs": [
      "Reporter Gene Expression",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Reporter Gene Expression</span>"
    ]
  },
  {
    "objectID": "exercise-03_reporter.html#load-and-inspect-your-data",
    "href": "exercise-03_reporter.html#load-and-inspect-your-data",
    "title": "3  Reporter Gene Expression",
    "section": "3.2 Load and inspect your data",
    "text": "3.2 Load and inspect your data\nYour data is in the file reporter_curves.csv, so load it into R using the read.csv() function, and inspect the format of your data, just as you did for the yeast growth data in Chapter 2.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nHelp! I’m stuck!\n\n\n\n\n\nUse the R code below to load your data\ndata &lt;- read.csv(\"reporter_curves.csv\")\nglimpse(data)",
    "crumbs": [
      "Reporter Gene Expression",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Reporter Gene Expression</span>"
    ]
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "4  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Summary</span>"
    ]
  },
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "Additional Resources",
    "section": "",
    "text": "BLAST",
    "crumbs": [
      "Additional Resources"
    ]
  },
  {
    "objectID": "resources.html#blast",
    "href": "resources.html#blast",
    "title": "Additional Resources",
    "section": "",
    "text": "BLAST Results: Expect Values Part 1 video\nBLAST Results: Expect Values Part 2 video\nMIT OpenCourseWare - Local Alignment (BLAST) and Statistics video\nNCBI’s Introduction to BLAST link\nNCBI Minute: Using BLAST Well video\nUC Berkeley introduction to NCBI-BLAST link",
    "crumbs": [
      "Additional Resources"
    ]
  },
  {
    "objectID": "resources.html#data-visualisation",
    "href": "resources.html#data-visualisation",
    "title": "Additional Resources",
    "section": "Data Visualisation",
    "text": "Data Visualisation\n\nFundamentals of Data Visualization (Claus Wilke) online book\nPoints of View: Visualising biological data link",
    "crumbs": [
      "Additional Resources"
    ]
  },
  {
    "objectID": "resources.html#r",
    "href": "resources.html#r",
    "title": "Additional Resources",
    "section": "R",
    "text": "R\n\nAn Introduction to R online book\nR Manuals :: An Introduction to R link\nR for Reproducible Scientific Analysis (Software Carpentry) link\nggplot2 guide link\nggplot2 cheatsheet link",
    "crumbs": [
      "Additional Resources"
    ]
  }
]